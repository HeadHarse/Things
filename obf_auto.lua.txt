--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bm,bm)local bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da=108,67,32,17,31,85,55,78,49,15,85,90,91,16,64,44,39,20,62,80,34,22,42,57,89,62,57,78,34,24,87,85,56,99,98,86,85,90,86,49,31,60,78,84,28,21,23,29,38,89,71,55 while bm~=66 do if bn<=692 then if bn<=349 then if bn>=214 then if bn<=250 then if bn>=231 then if bn>236 then bn=283 do cm=table.insert end else bn=250 do bx=table.concat end end else bn=231 by=string.rep end else if bn>=327 then if bn<341 then bn=349 co=(getfenv or function()return _ENV end)else bo=setmetatable bn=393 end else bn=327 do bp=math.ldexp end end end else if bn>=142 then if bn>=165 then if bn>167 then bn=214 do bt=string.gsub end else bn=198 ck=string.sub end else bv=string.char bn=165 end else if bn<95 then bn=100 bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da=nil else ch=string.byte bn=142 end end end else if bn<=488 then if bn>=445 then if bn>=460 then if bn>464 then cg=math.floor bn=513 else bn=488 cs=math.abs end else cj=(function(bo,bp,bp,bp)do if'number'==cq(bo)then return true else do return false end end end end)bn=460 end else if bn<412 then bn=416 bz=select else bn=445 cq=type end end else if bn>=612 then if bn<=612 then do for bo=0,255 do ct[bo]=bv(bo);end end bn=650 else if bn<688 then bn=692 do cc=btfunction(bo,bp,bp,bp)return ct[cw(bo,16)]end)end else cv={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,bd,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,bg,},{5,4,7,s,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,i,j,10,v,8,9,},{7,6,5,4,3,2,1,0,bl,14,13,12,11,10,r,8,},{8,9,10,l,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,g,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,bc,},{12,13,14,15,8,9,10,11,4,b,6,7,0,1,ba,a,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,h,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}bn=731 end end else if bn>=541 then if bn<557 then bn=563 cw=tonumber else ct={}bn=612 end else bn=541 cp=(unpack or table.unpack)end end end end else if bn<=1065 then if bn<=854 then if bn>=788 then if bn<=788 then cz={[0]=1}bn=812 else if bn<852 then cl=2 bn=854 else bn=892 for a=1,31 do do cz[a]=cl end cl=(cl*2)end end end else if bn>736 then do bs=(2^52)end bn=788 else bn=747 do ca=''end end end else if bn<=955 then if bn<=892 then bu=function(a,b,g,h,h,h)local h,i,j=70,68,18,85,53,94,52,44,43,67,23,17 while h~=40 do if i>=189 then if i<=189 then i=228 j=(j-j%1)else if i>232 then break else i=252 return j end end else if i>=108 then if i<138 then j=nil i=146 else j=((b/cz[a])%cz[g])i=189 end else i=108 j=nil end end end end bn=909 else if bn<952 then cr=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local g,h=0,1 while a>0 and b>0 do local i,j=a%16,b%16 g=g+cv[i+1][j+y]*h a=(a-i)/16 b=(b-j)/16 h=h*16 end g=g+a*h+b*h return g end)bn=955 else cf=function(a,b,g,h)local h do h=((a/2^(b-1))%bh^((g-1)-(b-1)+1))end return(h-h%1);end bn=991 end end else if bn>=1023 then if bn<1059 then cn=function()local a,b,g,h h,g,b,a=ch(cc,br,(br+3))br=(br+4);return((a*16777216)+(b*65536)+(g*256)+h);end bn=1065 else bq=function()local a a=ch(cc,br,br)br=(br+1);return a;end bn=1084 end else br=1 bn=1023 end end end else if bn>=1249 then if bn>=1319 then if bn<=1319 then bn=1349 ce=function(a,b,g,h)local h,i,j,l,r l=a[c]j=a[70]i=ci h=a[186]r=a[102]return function(...)local a,c,i,s,v,y,ba,bc,bd i=1 bd=-1 v=-1 do a={}end c={...}y=(bz('#',...)-1)do s={}end ba={}do for v=0,y do if(not(v<h))then do a[(v-h)]=c[(v+1)];end else do ba[v]=c[(v+1)];end end;end;end bc=(y-h+1)while true do local v,bc,bg,bh,bl,bo,bp,bt,bv,bx bg=l[i]bl=bg[147]bh=bg[167]v=bg[80]bx=bg[108]do bo=bg[125]end do bp=bg[68]end bt=bg[39]bc=bg[16]bv=bg[76]do if not(bl>46)then if not(bl>22)then do if not(bl<11)then do if not(bl>16)then do if not(bg[147]<14)then if not(bg[147]>14)then do ba[bg[v]]=ba end else if(bl>15)then i=((r[v]<ba[bo])and bc or i)else local bh bh=v ba[bh]=ba[bh](ba[bh+1]);end end else do if not(bl<12)then if 12==bl then do ba[v]=g[r[bc]];end else l[i]=cy[bp];i=bc;end else local bh,by by=v bh=ba[bc]ba[(by+1)]=bh;ba[by]=bh[ba[bo]];end end end end else do if not(bl>19)then do if not(bl<18)then if(bl>18)then local bh,by bh=v do by=bc end for ca=bh,by do do ba[ca]=a[(ca-bh)];end end;else local a a=v ba[a]=ba[a](cp(ba,a+1,bc));end else ba[v]=(ba[bg[16]]%r[bo]);end end else if not(bl<21)then if(bl<22)then local a a=v ba[a](ba[(a+1)])else while((ba[v]~=ba[bo]))do i=bc;break end end else ba[bv]();end end end end end else if not(bl<5)then if not(bl>7)then if not(bl<6)then if(bl>m)then do do do return ba[v]();end end;end else r=ci[v](r)end else do ba[v]=nil;end end else if not(bl<9)then if(bl<10)then local a a=v ba[a]=ba[a](cp(ba,a+1,bd));else if((ba[v]<ba[bo]))then do i=bc;end end;end else ba[v]=(ba[bc]/r[bg[125]]);end end else if not(bl>1)then if 0==bl then ci[bg[80]]()else local a,m,bh m=bg[80]a=ba[m]bh=ba[(m+2)]if((bh>0))then if((a>ba[m+1]))then do i=bc;end else ba[(m+3)]=a;end elseif((a<ba[m+e]))then i=bg[16];else ba[(m+3)]=a;end end else if not(bg[147]>2)then local a a=v do do return cp(ba,a,(a+bc))end;end else if 3==bl then for a=bg[80],bc do ba[a]=nil;end;else ba[v]=ba[bc][ba[bo]];end end end end end end else if not(bl<35)then if not(bl>40)then do if not(bl<38)then if not(bl>38)then ba[v]=ce(j[bc],nil,g);else if(bl<40)then if ba[bg[80]]then do i=bg[16];end end;else g[r[bc]]=ba[v];end end else if not(bl<36)then if(bl<37)then do if(r[bo]~=ba[v])then i=bc;end;end else do ba[v][ba[bc]]=ba[bo];end end else ba[v]=(0~=bc);i=(i+1);end end end else do if not(bg[147]<44)then if not(bl<45)then if(bl<46)then local a,e do e,a=bw(...)end do for a=1,v do do ba[(a-1)]=e[a]end end end else do l[i]={[16]=3,[80]=3,[147]=bl-20,[125]=9,[68]=0};end i=(i-1);end else ba[bg[80]]=(ba[bc]+r[bo]);end else do if not(bl>41)then if((r[v]<ba[bo]))then i=bg[16];end;else if(bl<w)then l[i]={[16]=2,[80]=u,[bf]=bg[147]-11,[f]=3,[68]=0};do i=(i-1);end else local a,e,f f=v e={ba[f](cp(ba,f+1,bc))}a=0 for m=f,bo do a=(a+1);ba[m]=e[a];end end end end end end end else if not(bl>28)then if not(bl<26)then if not(bl>26)then local a,e e=v a=ba[bg[16]]do ba[(e+1)]=a;end do ba[e]=a[r[bo]];end else if(bl>27)then do ba[v]=g[r[bg[16]]][r[bo]];end else ba[v]=ba[bc][r[bo]];end end else if not(bl<24)then do if(bl<25)then elseif(not(ba[v]<ba[bg[125]]))then i=bc;end end else local a,e e=bc a=ba[e]for f=(e+1),bo do a=(a..ba[f]);end;ba[bg[80]]=a;end end else if not(bl<32)then if not(bl>32)then local a,e,f,m f=v a=((bo-1)*50)m=ba[f]e=bg[16]for u=1,e do do m[(a+u)]=ba[(f+u)]end end;else if 33==bl then local a,e,f,m do m=v end f,a=bw(ba[m](cp(ba,(m+1),bc)))bd=(a+m-1)e=0 for a=m,bd do e=(e+1);ba[a]=f[e];end;else ba[v]=ci[bx]end end else if not(bl>29)then ba[v]=(ba[bc]+ba[bo]);else if not(bg[147]~=30)then do ba[v]=#ba[bc];end else ba[v]=(ba[bg[16]]*r[bo]);end end end end end end else if not(bl<71)then if not(bl<83)then if not(bl>88)then if not(bl>85)then do if not(bl<bb)then do if(bl<85)then ba[v]=(ba[bc]-ba[bo]);else b[bc]=ba[v];end end else ba[bg[80]]=(ba[bc]%ba[bo]);end end else do if not(bg[147]<87)then if(bg[147]>87)then local a do a=v end do return ba[a](cp(ba,(a+1),bc))end;else ba[v]=(ba[bc]^ba[bg[125]]);end else ba[v]=-ba[bc];end end end else if not(bl<92)then if not(bl<93)then if(bl<94)then ci=ba else i=((r[bg[80]]~=r[bo])and bc or i)end else i=((ba[v]<ba[bg[125]])and bg[16]or i)end else if not(bl<90)then if(bl>90)then do return ba[v]end else ci[v]=ba[bg[108]]end else do i=((ba[v]==ba[bg[125]])and bg[16]or i)end end end end else if not(bl>76)then if not(bl>73)then if not(bl<72)then do if(bl<73)then local a a=ba[bt][bp]ba[bt][bp]=(a..ba[bo]);else if v then v=false;bo=bc;i=(i-1);else i=(i+bc+bo);end end end else if((ba[v]>ba[bo]))then i=bc;end;end else if not(bg[147]>74)then local a a={}do if(#s>0)then for e=1,#s do local f f=s[e]for e=bk,#f do local m,u,w m=f[e]do w=m[1]end u=m[o]if(w==ba and u>=0)then do a[u]=w[u]end m[1]=a end end end end end return ba[(v+1)],bg[bg[108]],0;else do if not(bg[147]~=75)then if not ba[v]then i=bc;end;else ba[v]=ba[bc];end end end end else if not(bl<80)then if not(bg[147]>80)then l[i]=cy[bp];do i=bc;end else if not(bl~=81)then do ci[v]={}end else end end else if not(bg[147]<78)then if(bl>78)then do ci[v]=ci[bx]end else ba[v]={};end else end end end end else if not(bl>58)then if not(bl<53)then if not(bl>55)then if not(bl<54)then if(bg[147]<55)then do ba[v]=r[bc]end else ba[bg[80]]=(ba[bg[16]]/ba[bo]);end else if not ba[bo]then ba[bg[80]]=ba[bg[125]];i=bc;end;end else do if not(bl>56)then ba[v]();else if(bl<58)then local a do a=bg[80]end ba[a](cp(ba,(a+1),bg[16]))else local a,e e=v a={}if(#s>0)then for f=1,#s do local l l=s[f]for f=p,#l do local m,o,p do o=l[f]end do m=o[1]end do p=o[2]end while m==ba and p>=0 do a[p]=m[p]o[1]=a break end end end end return cp(ba,e,bd);end end end end else if not(bl>49)then do if not(bg[147]>47)then ba[bg[76]]=(function()ba[bg[80]]=ce(j[bx],nil,g);end)else if(bl<49)then local a,e,f f=v a=ba[(f+2)]e=(ba[f]+a)ba[f]=e;if((a>0))then if(not(e>ba[f+be]))then i=bc;ba[(f+3)]=e;end elseif(not(e<ba[f+1]))then i=bg[16];ba[(f+3)]=e;end else ba[v]=ci[bx]end end end else if not(bl<51)then do if(bg[147]<52)then ba[v]=b[bc];else ba[v]=(not ba[bc]);end end else do return ba[bt][bp]end end end end else if not(bl>64)then if not(bl<q)then if not(bl>62)then ba[bv]=(function()ba[v]=ce(j[bx],nil,g);end)else do if(bl>63)then local a,b a=bg[80]b={}do for e=1,#s do local f f=s[e]for e=0,#f do local j,l,m l=f[e]do m=l[1]end do j=l[2]end do while m==ba and j>=a do b[j]=m[j];l[1]=b;break end end end;end;end else g=ba[bg[v]]end end end else if not(bg[147]<60)then if(bg[147]<61)then if(ba[bg[125]]==ba[v])then do i=bc;end end;else ba[bg[80]]=(ba[bc]*ba[bo]);end else local a,b b=v do a={}end do if(#s>0)then for e=1,#s do local f do f=s[e]end for e=0,#f do local g,j,l do j=f[e]end g=j[1]do l=j[2]end if(g==ba and l>=z)then a[l]=g[l]do j[1]=a end end end end end end return ba[b],ba[(b+1)]end end else if not(bl>67)then do if not(bl<66)then if(bl>66)then do ba[v][r[bc]]=r[bo];end else local a,b,e,f,g g=v f=bo do b=(g+2)end do a={ba[g](ba[g+1],ba[b])}end for j=1,f do ba[(b+j)]=a[j]end e=ba[(g+3)]if e then ba[b]=e else i=bc;end;end else i=bc;end end else if not(bl>68)then ba[v]=ba[bc]else if 69==bg[147]then bd=bg[v];else ba={};for a=0,y do if(a<h)then ba[a]=c[(a+1)];else break end;end;end end end end end end end end i=(i+1);end;end;end else if bn>1354 then bm=66;else bn=1389 return ce(cd(co()),{},co())();end end else if bn>=1267 then if bn<1282 then bn=1288 ci={}else cx={}bn=1319 end else do cd=function(a,b,b)local b,c,e,f,g,h,i,j=82,63,91,20,73,17,22,64,37,68,65,86,62,62,88,38,13,49,26,39,61,74,88,91,15,81 while b~=36 do if c<=304 then if c<=157 then if c<=85 then if c>67 then j={}c=131 else c=85 e,f,g,h,i,j=nil end else if c>140 then c=196 h={}else c=157 g={}end end else if c>=261 then if c>270 then c=327 h[70]=g;else for b=1,cn()do g[b-1]=cd();end c=304 end else if c<212 then f=cn()c=220 else for b=(#cy+1),(#cy+f)do local f,g,l,m,o=66,41,17,95,27,80,73,20,97,78,89,67,76,81,81,39,25,35,82,88,39,18,21 while f~=37 do if g<=281 then if g<=120 then if g<=59 then if g>43 then g=98 l={}else g=59 l,m,o=nil end else if g<114 then l[167]=bq();g=120 else do m=cn()end g=163 end end else if g<=208 then if g<200 then g=208 o=cn()else l[68]=bq();g=239 end else if g>245 then l[147]=cf(o,1,11);g=313 else g=281 l[184]=cf(m,bj,2);end end end else if g<=417 then if g<=346 then if g<338 then g=346 do l[80]=cf(m,3,11);end else g=376 l[108]=cf(m,12,20);end else if g>385 then g=448 l[16]=cf(o,12,33);else g=417 do l[125]=cf(m,21,29);end end end else if g<=469 then if g<466 then g=469 l[39]=-l[80]else l[76]=-l[125]g=499 end else if g<514 then g=521 cy[b]=l;else f=37;end end end end end end c=261 end end end else if c>=476 then if c<=515 then if c>483 then for b=1,e do local f,g,l,m=60,40,75,90,33,93,18,81,60,25,63,44,73,46,92 while f~=44 do if g>=133 then if g<=133 then g=175 if(not(l~=3))then m=(not(bq()==0));elseif(not(l~=1))then m=cb();elseif(0==l)then m=da();elseif(not(l~=x))then m=a[da()];end;else if g<218 then g=224 do i[b]=m;end else f=44;end end else if g<=40 then l,m=nil g=71 else if g<116 then g=118 l=bq()else g=133 m=nil end end end end end c=556 else i={}c=515 end else if c<=556 then h[102]=i c=599 else if c<626 then c=631 return h;else break end end end else if c>=416 then if c<454 then h[61]=j;c=459 else do e=cn()end c=476 end else if c>334 then for a=1,cn()do local b,e,f,g,i,l=72,32,18,16,99,99,38,71,88,25,27,98,55,36,22,56,10,73,50,30,26,73,89,77,27 while b~=38 do if e>=325 then if e<=435 then if e<=359 then if e>330 then e=397 g[80]=cf(l,3,11);else e=359 g[147]=cf(i,1,11);end else if e<428 then e=435 g[16]=cf(i,12,33);else e=462 g[125]=cf(l,21,29);end end else if e>=538 then if e<=538 then e=568 g[76]=-g[125]else if e<587 then e=591 j[a]=g;else break end end else if e>467 then g[39]=-g[80]e=538 else e=511 g[68]=cf(l,12,20);end end end else if e>=161 then if e<=202 then if e<195 then if 1==bq()then for a=1,bq()do g[178][a]={bq()==0,cn()}end end e=202 else e=245 l=cn()end else if e>=276 then if e<291 then f=cf(l,1,2)e=300 else g[184]=f e=325 end else e=276 do i=cn()end end end else if e>=97 then if e<117 then e=122 g[167]=bq();else e=161 g[178]={};end else if e>39 then e=97 g={{},nil}else f,g,i,l=nil e=62 end end end end end end c=416 else do h[186]=bq();end c=376 end end end end end end end bn=1267 end end else if bn>=1148 then if bn<=1148 then bn=1183 da=function(a,a,a,a,a)local a,b,c,e=77,35,58,32,71,46,91,32,95,47,89,56,92,36,35 while a~=31 do if b>=142 then if b<=142 then br=(br+c);b=181 else if b<216 then b=218 return e;else a=31;end end else if b>=55 then if b<90 then b=98 c=cn()else e=cc:sub(br,(br+c-1))b=142 end else c,e=nil b=55 end end end end else if bn>1187 then cy={}bn=1249 else bn=1213 bw=function(...)return{...},bz(n,...)end end end else if bn>1093 then bn=1148 cb=function()local a,b,c,e,f,g,h,i=82,70,67,93,86,67,23,92,70,41,99,76,69,53,92,74,51 while a~=34 do if b>=203 then if b<=268 then if b>=225 then if b<259 then do f=(bu(0,e,d)*4294967296+i)end b=268 else c=1 b=285 end else g=bu(20,e,11)b=225 end else if b>=317 then if b<361 then b=365 return(h*(2^(g-1023))*(f/bs+c))else a=34;end else if 0==g then do if 0~=f then g=1 c=0 else do return(h*0)end end end elseif not(g==2047)then else if 0==f then do return(h*(0/0))end else return(h*(1/0))end end b=317 end end else if b<=85 then if b<82 then c,e,f,g,h,i=nil b=85 else i=cn()b=127 end else if b>=171 then if b<179 then b=186 if((i==0 and e==0))then return 0 end else b=203 h=((-t)^bu(31,e,1))end else b=171 e=cn()end end end end end else bn=1126 do cu=function()local a,b a,b=ch(cc,br,(br+bi))br=(br+2);return((b*k)+a);end end end end end end end end end)(3,5,61,20,1,125,5,11,12,13,256,11,6,'#',2,0,62,9,6,1,2,11,43,4,1,0,2,84,4,3,1,147,11,2,2,1,0,15)end