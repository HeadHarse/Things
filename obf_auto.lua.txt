--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi)local bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw=113,46,64,50,88,57,21,90,46,41,94,84,50,50,56,63,30,20,78,51,16,14,58,78,22,64,96,55,85,73,83,33,22,88,15,92,46,52,14,54,85,95,78,84,41,26,94,94,32,37,26,66 while bi~=65 do if bj>=638 then if bj<=986 then if bj>=835 then if bj>=925 then if bj<=925 then ch=1 bj=970 else if bj>972 then cb=function()local bi bi=cs(by,ch,ch)ch=(ch+1);return bi;end bj=1020 else bj=986 ct=function()local bi,cx,cy,cz do bi,cx,cz,cy=cs(by,ch,(ch+3))end ch=(ch+4);return((cy*16777216)+(cz*65536)+(cx*256)+bi);end end end else if bj>=860 then if bj<898 then bj=904 bo=(bit_lib and bit_lib.bxor or function(bi,cx)bi=bi%(2^32)cx=cx%(2^32)local cy,cz=0,1 while bi>0 and cx>0 do local da,db=bi%16,cx%16 cy=cy+cf[da+1][db+1]*cz bi=(bi-da)/16 cx=(cx-db)/16 cz=cz*16 end cy=cy+bi*cz+cx*cz return cy end)else bj=925 cm=function(bi,cx,cy,cz,cz,cz,cz)local cz cz=((bi/2^(cx-1))%2^((cy-v)-(cx-1)+1))return(cz-cz%i);end end else do bm=function(i,v,bi,cx)local cx,cy,cz=87,37,54,40,49,99,79,71,19,78,53,88,16 while cx~=41 do if cy>=117 then if cy<=117 then cy=160 cz=(cz-cz%1)else if cy<176 then cy=185 return cz else break end end else if cy<=37 then cz=nil cy=72 else if cy>77 then cy=117 cz=((v/cp[i])%cp[bi])else cz=nil cy=90 end end end end end end bj=860 end end else if bj>=723 then if bj<=723 then do cp={[0]=1}end bj=751 else if bj>760 then bj=835 for i=1,31 do cp[i]=ce ce=(ce*2)end else bj=793 do ce=2 end end end else if bj<679 then bj=685 bv=''else do br=(2^52)end bj=723 end end end else if bj>=1159 then if bj>=1235 then if bj<=1235 then cj=function(i,v,bi,cx,cx)local cx,cy,cz,da,db cy=i[185]cz=i[4]cx=i[194]da=cl db=i[91]return function(...)local i,da,dc,dd,de,df,dg,dh,di dg=1 do dh=-1 end dd=-1 df={}dc={...}da=(bk('#',...)-1)de={}di={}do for dd=0,da do if(not(dd<cz))then df[(dd-cz)]=dc[(dd+1)];else di[dd]=dc[(dd+1)];end;end;end i=(da-cz+1)while true do local i,dd,dj,dk,dl,dm,dn,_do,dp,dq dn=db[dg]do dm=dn[97]end do dd=dn[q]end do dp=dn[14]end dq=dn[116]dj=dn[137]dl=dn[45]dk=dn[28]i=dn[131]_do=dn[164]if not(dm<46)then do if not(dm<69)then if not(dn[97]<80)then do if not(dm>85)then if not(dn[97]>82)then if not(dm<81)then if(dn[97]<82)then do cl[dp]=di[dq]end else di[dp]=(di[dn[131]]-di[dj]);end else do di[dp]=(di[i]/cy[dj]);end end else if not(dm>83)then if di[dp]then dg=dn[131];end;else if(dm>84)then else di[dp]=nil;end end end else if not(dm<89)then if not(dm<bf)then if(dm<91)then dg=i;else cl[dp]()end else local q q=dn[14]do di[q]=di[q](bt(di,q+1,dh));end end else if not(dm>86)then for q=dp,i do di[q]=nil;end;else if(dn[97]<88)then di[dp]=(di[i]+di[dn[137]]);else local q,bf,dd q=dp do bf=di[q]end dd=di[(q+2)]if((dd>0))then do if((bf>di[q+1]))then dg=i;else di[(q+3)]=bf;end end elseif((bf<di[q+1]))then do dg=i;end else do di[(q+3)]=bf;end end end end end end end else do if not(dn[97]>73)then if not(dn[97]>70)then do if(dn[97]>69)then di[dp]=(di[i]^di[dj]);else di[dp]=di[i];end end else if not(dn[97]<72)then if not(dn[97]~=72)then do di[dn[14]]=di[i][di[dj]];end else di[dn[14]]=(di[i]%cy[dj]);end else local q,bf q=dp do bf=di[i]end di[(q+1)]=bf;di[q]=bf[cy[dj]];end end else if not(dm>76)then if not(dm<75)then do if(dm<76)then local q,bf,dd,dr dr=dp q,bf=cu(di[dr](bt(di,(dr+1),i)))dh=(bf+dr-1)dd=h for h=dr,dh do dd=(dd+1);di[h]=q[dd];end;else db[dg]=cc[dn[45]];dg=i;end end else local h,q q=dp h=i for bf=q,h do di[bf]=df[(bf-q)];end;end else if not(dm<j)then if(dm<79)then if(not(di[dp]==di[dj]))then dg=i;end;else local h h=dp do di[h]=di[h](bt(di,h+1,i));end end else di[dp]=(not di[dn[131]]);end end end end end else if not(dm>56)then if not(dm>50)then if not(dm<48)then do if not(dm>48)then if((di[dn[14]]>di[dj]))then dg=i;end;else do if not(dm~=49)then di[dp]=bi[cy[dn[131]]];else local h,j,q h=dp q={di[h](di[h+1])}j=0 for bf=h,dn[137]do j=(j+1);di[bf]=q[j];end end end end end else if(dm<47)then do cy=cl[dn[14]](cy)end else di[dp]=cy[i]end end else if not(dn[97]<54)then if not(dm<55)then if(dm<56)then di[dn[14]]=(di[i]%di[dj]);else local h,j,q j=dn[14]q=di[(j+2)]h=(di[j]+q)di[j]=h;if((q>0))then if(not(h>di[j+1]))then dg=i;di[(j+3)]=h;end elseif(not(h<di[j+y]))then dg=i;di[(j+3)]=h;end end else cl[dp]={}end else if not(dm<w)then if(dm>52)then di[_do]();else bi=di[dn[dp]]end else local h,j h=i j=di[h]for q=(h+1),dj do j=(j..di[q]);end;di[dp]=j;end end end else if not(dm<63)then if not(dm>s)then if not(dn[97]<64)then if(dm<65)then do dg=((cy[dp]<di[dj])and i or dg)end else end else local h h=dp di[h](di[(h+1)])end else do if not(dm<67)then if(dm>67)then do return di[dp]end else local h h=dp do return bt(di,h,(h+i))end;end else do cl[dn[14]]=cl[dn[116]]end end end end else do if not(dn[97]<60)then if not(dm>60)then di[dp]=(di[i]*cy[dj]);else if 61==dm then do if not di[dj]then di[dp]=di[dj];dg=i;end;end else di[dp]=(di[i]*di[dn[137]]);end end else if not(dm<58)then if(dm>58)then di[dp]=cl[dq]else do do return di[dn[28]][dl]end end end else di[dn[14]]=(di[i]/di[dn[137]]);end end end end end end end else if not(dm<23)then if not(dm<34)then do if not(dm>39)then if not(dm<37)then if not(dn[97]>u)then do di[dp]=di[i]end else if(dn[97]<39)then local h h={}if(#de>0)then for j=1,#de do local q do q=de[j]end for j=0,#q do local s,u,w do s=q[j]end w=s[1]u=s[2]do if(w==di and u>=0)then do h[u]=w[u]end do s[b]=h end end end end end end return di[(dp+2)];else di[dp]=v[i];end end else do if not(dm>34)then if not di[dp]then dg=i;end;else if(dm>35)then di[dp]=cj(cx[dn[131]],nil,bi);else di[dn[dp]]=di end end end end else do if not(dm>42)then if not(dm>40)then do if((cy[dp]<di[dj]))then do dg=i;end end;end else do if 41==dm then local b b=dn[14]do return di[b](bt(di,(b+1),dn[131]))end;else do db[dg]={[97]=dm- -7,[131]=1,[137]=0,[45]=0,[14]=0};end do dg=(dg-t);end end end end else if not(dm<44)then do if not(dn[97]~=44)then dh=dn[dp];else local b,h do h=dn[14]end b={}if(#de>bd)then for j=1,#de do local q q=de[j]for j=0,#q do local s,t,u do s=q[j]end u=s[1]t=s[2]if(u==di and t>=0)then b[t]=u[t]s[1]=b end end end end return di[h],di[(h+1)]end end else do if(not(di[dn[14]]==cy[dj]))then dg=i;end;end end end end end end else if not(dm>27)then if not(dm>24)then if(dn[97]>23)then db[dg]={[131]=1,[45]=g,[97]=dm- -23,[14]=1,[137]=80};do dg=(dg-1);end else di[dp]=(di[dn[131]]+cy[dj]);end else if not(dm<26)then if not(dn[97]~=26)then bi[cy[i]]=di[dp];else do if((di[dp]<di[dj]))then dg=i;end;end end else if(not(di[dp]<di[dj]))then dg=dn[131];end;end end else if not(dm<31)then if not(dm<32)then if(dm<33)then local b,g,h,j,q g=dp b=dj q=(g+2)h={di[g](di[g+1],di[q])}for s=1,b do di[(q+s)]=h[s]end j=di[(g+3)]if j then di[q]=j else do dg=i;end end;else di[_do]=(function()di[dp]=cj(cx[dq],nil,bi);end)end else di[dp]=cl[dq]end else if not(dm<29)then if(dm>29)then do di[_do]=(function()di[dp]=cj(cx[dq],nil,bi);end)end else if(not(di[dp]~=di[dn[137]]))then do dg=dn[131];end end;end else di[dp]=#di[i];end end end end else if not(dn[97]<11)then if not(dm<17)then if not(dn[bg]>19)then if not(dm<18)then if 18==dn[97]then else local b b=di[dk][dl]di[dk][dl]=(b..di[dj]);end else local b,g g=dp b={}if(#de>0)then for h=1,#de do local j j=de[h]for h=0,#j do local q,s,t t=j[h]q=t[1]do s=t[2]end while q==di and s>=0 do b[s]=q[s]t[z]=b break end end end end return bt(di,g,dh);end else do if not(dm<21)then if(dm>21)then local b b=dp di[b]=di[b](di[b+1]);else local b,g g,b=cu(...)for b=1,dn[14]do di[(b-1)]=g[b]end end else local b b=dn[14]di[b](bt(di,(b+1),i))end end end else do if not(dm>13)then do if not(dm>11)then di[dn[14]]=bi[cy[i]][cy[dj]];else if(dm>bh)then do if dp then do dp=false;end dn[137]=dn[131];dg=(dg-1);else dg=(dg+dn[131]+dj);end end else di[dp][cy[i]]=cy[dj];end end end else if not(dn[97]<c)then if 15==dm then local b,c,g c=dp b={di[c](bt(di,c+1,i))}g=0 for h=c,dj do do g=(g+1);end di[h]=b[g];end else local b,c,g,h b=dp h=((dj-1)*50)g=di[b]c=i for j=1,c do g[(h+j)]=di[(b+j)]end;end else di[dp][di[i]]=di[dj];end end end end else if not(dn[97]<5)then do if not(dm<8)then if not(dm<9)then if(dn[97]<10)then do db[dg]={[131]=5,[45]=0,[137]=3,[14]=0,[97]=dm- -71};end dg=(dg-1);else db[dg]=cc[dl];do dg=i;end end else di[dp]=-di[i];end else if not(dm>5)then di[dp]=(not(i==0));dg=(dg+1);else do if(dm<7)then local b,c c=dp b={}for g=1,#de do local h h=de[g]for g=0,#h do local j,q,s do s=h[g]end q=s[1]do j=s[2]end do if(q==di and j>=c)then b[j]=q[j];s[1]=b;end;end end;end;else di={};for b=0,da do if(b<cz)then do di[b]=dc[(b+1)];end else break end;end;end end end end end else if not(dm>1)then if not(dn[97]~=0)then di[dp]={};else di[dp]=di[i][cy[dj]];end else if not(dm<3)then if not(dn[97]~=3)then local b,c b=dp c=di[i]di[(b+1)]=c;di[b]=c[di[dj]];else cl=di end else v[i]=di[dp];end end end end end end dg=(dg+1);end;end;end bj=1265 else if bj>1269 then break else bj=1287 return cj(ck(bs()),{},bs())();end end else if bj>=1185 then if bj<1194 then do cl={}end bj=1203 else ca={}bj=1235 end else do ck=function(b,c,c,c,c)local c,g,h,i,j,q,s,t=87,54,47,21,42,61,76,59,49,23,42,16,25,18,73,61,46,52,40,30,91,61,92 while c~=44 do if g<=242 then if g<=123 then if g<=73 then if g>63 then h={}g=98 else g=73 h,i,j,q,s,t=nil end else if g>105 then g=168 i={}else s={}g=123 end end else if g<=183 then if g<174 then g=183 j=ct()else do for u=(#cc+1),(#cc+j)do local j,v,w,y,z=75,55,14,19,49,46,34,51,80,65,19,42,72,99,32,74,36,87,42,84,98,86,38 while j~=35 do if v<=255 then if v<=136 then if v>=111 then if v<128 then v=136 y[134]=cb();else z=ct()v=175 end else if v<93 then v=96 w,y,z=nil else y={}v=111 end end else if v<=202 then if v>180 then do y[45]=cb();end v=222 else w=ct()v=202 end else if v>231 then y[97]=cm(w,1,11);v=276 else v=255 y[195]=cm(z,1,2);end end end else if v>=393 then if v>=453 then if v<497 then v=500 cc[u]=y;else break end else if v<427 then y[28]=-y[14]v=431 else y[164]=-y[137]v=453 end end else if v>=347 then if v>356 then y[131]=cm(w,12,33);v=393 else do y[137]=cm(z,21,29);end v=371 end else if v>278 then y[116]=cm(z,12,20);v=347 else y[14]=cm(z,3,11);v=314 end end end end end end end g=202 end else if g<239 then g=242 i[4]=cb();else do t=ct()end g=281 end end end else if g<=371 then if g>=323 then if g<369 then i[185]=q g=371 else for j=1,ct()do local u,v,w,y,z,bd=89,52,57,15,22,83,13,60,45,55,33,43,21,73,14,66,56,89,21,47,13,14,71,21,63 while u~=42 do if v>=356 then if v>=492 then if v>=550 then if v<=550 then do bd[164]=-bd[137]end v=574 else if v>579 then u=42;else v=615 h[j]=bd;end end else if v<501 then v=509 do bd[45]=cm(y,12,20);end else v=550 do bd[28]=-bd[14]end end end else if v>=415 then if v<440 then bd[131]=cm(w,12,33);v=448 else v=492 bd[137]=cm(y,21,29);end else if v>358 then bd[14]=cm(y,3,11);v=415 else v=376 do bd[97]=cm(w,1,11);end end end end else if v<=153 then if v<=71 then if v<69 then w,y,z,bd=nil v=71 else do bd={{},nil}end v=116 end else if v<149 then v=153 bd[134]=cb();else bd[161]={};v=183 end end else if v<=212 then if v>191 then v=257 y=ct()else v=212 do if 1==cb()then for j=1,cb()do do bd[161][j]={cb()==0,ct()}end end end end end else if v<=257 then v=305 w=ct()else if v>308 then bd[195]=z v=356 else z=cm(y,1,2)v=323 end end end end end end end g=392 end else if g>289 then for j=1,t do local t,u,v,w=58,49,35,89,48,64,32,39,93,10,98,98,57 while t~=41 do if u<=91 then if u>=76 then if u>80 then do v=nil end u=133 else do w=cb()end u=91 end else u=76 v,w=nil end else if u>=158 then if u>166 then t=41;else u=185 q[j]=v;end else if(not(w~=4))then v=(0~=cb());elseif(3==w)then v=cd();elseif(0==w)then v=bw();elseif(2==w)then do v=b[bw()];end end;u=158 end end end end g=323 else g=300 q={}end end else if g>=448 then if g<=448 then g=496 i[194]=s;else if g>498 then c=44;else g=538 return i;end end else if g<414 then g=417 do i[91]=h;end else for b=1,ct()do do s[b-1]=ck();end end g=448 end end end end end end end bj=1185 end end else if bj<=1043 then if bj>1029 then do cd=function()local b,c,g,h,i,j,q,s=48,62,53,87,52,12,94,65,28,18,52,70,62,75,86,86,98,81 while b~=31 do if c>=260 then if c<=320 then if c<=260 then c=282 s=bm(20,q,bb)else if c>289 then j=r c=346 else g=(bm(0,q,20)*4294967296+h)c=320 end end else if c<=346 then c=369 if not(s~=0)then if 0~=g then s=1 j=0 else return(i*0)end elseif not(s==f)then else if not(g~=0)then do return(i*(0/0))end else return(i*(1/0))end end else if c>372 then break else c=415 return(i*(2^(s-1023))*(g/br+j))end end end else if c>=128 then if c>=176 then if c<206 then c=211 if((h==0 and q==0))then return 0 end else i=((-1)^bm(31,q,1))c=260 end else do q=ct()end c=176 end else if c<84 then g,h,i,j,q,s=nil c=86 else h=ct()c=128 end end end end end end bj=1072 else bj=1043 cv=function()local b,c c,b=cs(by,ch,(ch+2))ch=(ch+2);return((b*256)+c);end end else if bj<=1072 then bw=function(b,b)local b,c,f,g=73,43,21,66,48,82,32,29,12,40,24,97,64 while b~=28 do if c>=130 then if c<=130 then ch=(ch+g);c=161 else if c>163 then break else c=195 return f;end end else if c<=43 then f,g=nil c=75 else if c>82 then do f=by:sub(ch,(ch+g-1))end c=130 else c=101 g=ct()end end end end end bj=1108 else if bj<1121 then cu=function(...)return{...},bk('#',...)end bj=1127 else bj=1159 cc={}end end end end end else if bj>=321 then if bj<=437 then if bj<=355 then if bj>328 then do bu=type end bj=390 else bj=355 bk=select end else if bj>=419 then if bj>422 then bj=455 cr=math.floor else ci=math.abs bj=437 end else bj=419 co=(function(b,c,c)if'number'==bu(b)then return true else do return false end end end)end end else if bj>=551 then if bj>=578 then if bj<612 then bj=615 by=bnfunction(b,c,c)return bl[cw(b,16)]end)else cf={{x,p,2,3,4,5,6,7,8,9,10,11,m,13,be,15,},{1,0,3,2,5,4,7,6,9,8,11,10,d,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,bc,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,o,10,},{6,7,4,5,2,3,0,1,l,15,12,e,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,n,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,a,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,ba,3,0,1,},{15,14,k,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}bj=638 end else for a=0,255 do do bl[a]=bq(a);end end bj=578 end else if bj>=484 then if bj>490 then bj=551 bl={}else bj=533 cw=tonumber end else do bt=(unpack or table.unpack)end bj=484 end end end else if bj>=173 then if bj>=259 then if bj>=276 then if bj<293 then bj=299 do bs=(getfenv or function()return _ENV end)end else bz=setmetatable bj=321 end else do cn=math.ldexp end bj=276 end else if bj>=188 then if bj<213 then bp=table.concat bj=220 else bx=table.insert bj=259 end else bj=188 cg=string.rep end end else if bj<=69 then if bj>53 then bj=90 cs=string.byte else bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw=nil bj=69 end else if bj<=90 then bq=string.char bj=121 else if bj>126 then bj=173 do bn=string.gsub end else cq=string.sub bj=136 end end end end end end end end)(14,1,15,13,13,2047,0,0,1,78,13,14,12,7,11,1,134,1,65,1,37,1,52,0,1,1,2,11,12,0,14,90,97,12)