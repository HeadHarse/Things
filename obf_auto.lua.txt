--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,bd,bd,bd)local bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=113,53,24,36,27,24,24,87,20,91,63,41,77,24,12,33,85,18,64,44,33,12,75,72,42,68,81,43,64,84,32,36,78,33,20,90,37,89,36,77,70,12,99,45,71,56,28,44,11,51 while bd~=81 do if be<=723 then if be<=384 then if be>=240 then if be<=276 then if be>=261 then if be>266 then ca=table.insert be=312 else be=276 cd=table.concat end else bw=string.rep be=261 end else if be<=312 then bf=math.ldexp be=345 else if be<377 then bp=(getfenv or function()return _ENV end)be=384 else be=411 cf=setmetatable end end end else if be<=69 then if be<62 then bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=nil be=69 else do bu=string.byte end be=118 end else if be<=118 then do cc=string.char end be=159 else if be<188 then be=192 cg=string.sub else bi=string.gsub be=240 end end end end else if be<=567 then if be>=492 then if be>=524 then if be<564 then bj=math.abs be=567 else be=584 bs=math.floor end else bh=(function(bd,bf,bf)if'number'==bq(bd)then do return true end else return u end end)be=524 end else if be>415 then bq=type be=492 else bm=select be=445 end end else if be<=618 then if be>=599 then if be<610 then be=618 do cl=tonumber end else bl={}be=656 end else be=599 do bo=(unpack or table.unpack)end end else if be<=656 then for u=0,255 do bl[u]=cc(u);end be=702 else if be<718 then be=723 bn=bifunction(u,bd,bd)return bl[cl(u,16)]end)else cn={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,w,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,t,10,},{6,7,bb,5,2,m,0,l,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,x,0,3,2,5,4,7,6,},{ba,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,j,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,k,15,8,9,10,11,a,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,bc,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}be=765 end end end end end else if be>=1105 then if be<=1246 then if be>=1164 then if be>=1200 then if be<1237 then by=function(...)return{...},bm('#',...)end be=1246 else be=1287 do bz={}end end else cq=function(a,a,a)local a,j,k,l=58,41,80,18,15,97,86,45,34,44,75,78 while a~=44 do if j>=137 then if j<=137 then j=158 bv=(bv+k);else if j>165 then a=44;else j=183 return l;end end else if j<=41 then k,l=nil j=69 else if j<97 then j=106 do k=bk()end else l=bn:sub(bv,(bv+k-1))j=137 end end end end end be=1200 end else if be<1133 then cm=function()local a,j a,j=bu(bn,bv,(bv+2))bv=(bv+2);return((j*256)+a);end be=1136 else bt=function()local a,j,k,l,m,t,u,w=72,59,31,54,81,97,90,60,81,45,72,78,50,33,74,67,48,19 while a~=34 do if j>=238 then if j>=312 then if j>=332 then if j<376 then j=381 return(l*(2^(t-1023))*(w/ce+k))else a=34;end else j=332 if 0==t then if 0~=w then t=1 k=0 else return(l*0)end elseif 2047~=t then else if 0==w then do return(l*(0/s))end else return(l*(1/0))end end end else if j>=253 then if j>257 then k=1 j=312 else j=282 w=(ch(0,m,z)*4294967296+u)end else j=253 t=ch(20,m,11)end end else if j<=102 then if j>68 then j=144 u=bk()else j=102 k,l,m,t,u,w=nil end else if j>=174 then if j<193 then if((u==0 and m==0))then return 0 end j=195 else j=238 l=((-1)^ch(31,m,1))end else j=174 m=bk()end end end end end be=1164 end end else if be>=1408 then if be<=1408 then cb=function(a,j,k,l,l,l,l)local l,m,s,t,u m=a[153]s=a[70]l=a[117]u=bg t=a[67]return function(...)local a,u,w,x,z,ba,bb,bc,bd bc=1 bb=-1 x=-1 bd={}w={...}z=(bm('#',...)-1)a={}u={}do for x=0,z do if(not(x<t))then bd[(x-t)]=w[(x+1)];else u[x]=w[(x+y)];end;end;end ba=(z-t+1)while true do local x,y,ba,bf,bh,bi,bj,bl,bm,bq bi=s[bc]ba=bi[88]bf=bi[23]do bl=bi[22]end bm=bi[40]x=bi[159]y=bi[139]bj=bi[191]bq=bi[42]do bh=bi[87]end if not(ba<48)then if not(ba>71)then if not(ba<60)then if not(ba>65)then if not(bi[88]>62)then if not(ba>60)then bg[bi[22]]={}else if not(ba~=61)then bc=bq;else local bf,bs do bf=bl end bs={}for bw=1,#a do local ca ca=a[bw]for bw=0,#ca do local cc,cd,cf cf=ca[bw]cd=cf[1]do cc=cf[2]end if(cd==u and cc>=bf)then bs[cc]=cd[cc];cf[1]=bs;end;end;end;end end else if not(ba>63)then if u[bl]then bc=bq;end;else if not(ba~=64)then do if not u[bl]then bc=bq;end;end else local bf,bs do bs=bl end bf=u[bq]u[(bs+1)]=bf;do u[bs]=bf[l[x]];end end end end else if not(ba<e)then do if not(ba<c)then if 70==ba then do u[bl]=l[bi[42]]end else local c,e,bf,bs do bf=bl end c={u[bf]()}e=x bs=0 for bw=bf,e do bs=(bs+1);u[bw]=c[bs];end end else u[bl]=(0~=bq);bc=(bc+1);end end else if not(ba<67)then if(ba<68)then local c,e,bf bf=bi[22]e=u[bf]c=u[(bf+2)]if((c>0))then do if((e>u[bf+1]))then bc=bq;else u[(bf+3)]=e;end end elseif((e<u[bf+1]))then bc=bq;else do u[(bf+3)]=e;end end else local c c=bl do do do return u[c](bo(u,(c+1),bq))end end;end end else u[bl][l[bq]]=l[x];end end end else if not(ba<54)then if not(ba<57)then if not(ba>57)then local c c=bl u[c](bo(u,(c+1),bq))else if 58==ba then u[bl][u[bq]]=u[x];else local c c=bl do u[c]=u[c](bo(u,c+1,bi[n]));end end end else if not(ba>d)then u[bi[22]]=(u[bq]/u[x]);else do if(ba<56)then do bg[bl]=bg[bm]end elseif(not(u[bl]<u[bi[159]]))then bc=bi[42];end end end end else if not(bi[88]>50)then if not(ba>48)then u[bl]=j[bq];else if 49==ba then u[bh]();else u[bi[22]]=u[bi[42]][u[x]];end end else if not(ba>51)then do do return u[bj][y]end end else if(ba>52)then do k=u[bi[bl]]end else local c,d,e do c=bi[22]end d=u[(c+2)]do e=(u[c]+d)end u[c]=e;do if((d>0))then if(not(e>u[c+1]))then do bc=bq;end u[(c+3)]=e;end elseif(not(e<u[c+1]))then bc=bq;do u[(c+3)]=e;end end end end end end end end else do if not(ba<84)then if not(ba<90)then if not(ba<93)then do if not(bi[88]<95)then if(bi[b]<96)then local b,c b,c=by(...)for c=1,bl do u[(c-1)]=b[c]end else u[bi[22]]=k[l[bq]];end else if(bi[88]>93)then if((l[bl]<u[x]))then bc=bq;end;else do bg=u end end end end else if not(ba<91)then if 91==ba then u[bl]=(u[bq]%l[bi[159]]);else u[bl]=(u[bq]/l[x]);end else do bc=((l[bl]<u[bi[159]])and bq or bc)end end end else if not(ba>86)then if not(ba<q)then do if not(bi[88]~=85)then u[bl]=k[l[bq]][l[x]];else bc=((u[bl]==u[x])and bi[42]or bc)end end else local b,c,d,e e=bl do d=((x-v)*50)end b=u[e]c=bq for n=1,c do b[(d+n)]=u[(e+n)]end;end else if not(bi[88]<88)then if(ba<89)then local b,c c=bl b=bq for d=c,b do do u[d]=bd[(d-c)];end end;else if bl then bl=false;x=bi[42];do bc=(bc-1);end else bc=(bc+bq+x);end end else u[bi[87]]=(function()u[bi[22]]=cb(m[bm],nil,k);end)end end end else do if not(ba>77)then if not(ba>74)then if not(ba>72)then bg[bl]()else if(ba>73)then local b,c b=bl c=u[bq]u[(b+1)]=c;u[b]=c[u[x]];else u[bl]=(u[bq]^u[x]);end end else if not(ba>75)then j[bq]=u[bl];else if(ba>76)then u[bi[22]]=u[bq];else u[bi[22]]=cb(m[bq],nil,k);end end end else if not(ba>80)then do if not(ba>78)then if(not(u[bl]==l[x]))then bc=bq;end;else if(ba>79)then u[bi[bl]]=u else local b do b=bl end u[b]=u[b](bo(u,b+1,bb));end end end else if not(ba<82)then if not(ba~=82)then do bg[bi[22]]=u[bm]end else do s[bc]=bz[y];end bc=bq;end elseif((u[bl]>u[bi[f]]))then bc=bq;end end end end end end end else if not(ba>23)then if not(ba>11)then if not(ba<6)then if not(bi[88]>8)then if not(ba>6)then s[bc]={[159]=p,[42]=2,[22]=3,[139]=0,[88]=ba- -2};bc=(bc-1);else if not(ba~=7)then u[bl]=(not u[bq]);else u[bl]=u[bq][l[bi[159]]];end end else do if not(ba<10)then if 10==ba then do u[bl]=(u[bq]*u[x]);end else local b,c b=bl c={}do while#a>0 do for d=1,#a do local d=a[d]for e=0,#d do local d=d[e]local e=d[1]local f=d[2]if e==u and f>=0 then c[f]=e[f]d[1]=c end end end break end end do return bo(u,b,bb);end end else u[bl]=(u[bq]+l[x]);end end end else if not(ba>2)then if not(ba>0)then local b,c,d b=bl do c={u[b](bo(u,b+1,bi[42]))}end d=0 for e=b,x do d=(d+1);u[e]=c[d];end else if(ba>1)then u[bl]=(u[bq]-u[bi[159]]);elseif not u[bi[159]]then u[bi[22]]=u[x];bc=bq;end end else if not(ba<4)then if not(ba~=4)then local b,c,d,e do e=bl end c,d=by(u[e](bo(u,(e+1),bq)))bb=(d+e-1)do b=0 end for d=e,bb do b=(b+1);u[d]=c[b];end;else local b,c c=bq do b=u[c]end for d=(c+1),x do b=(b..u[d]);end;u[bl]=b;end else do do return u[bl]();end end;end end end else do if not(ba<18)then if not(ba<21)then if not(ba>21)then do u[bl]=u[bq]end else if(ba>22)then if(u[x]==u[bl])then bc=bi[42];end;else end end else if not(ba<19)then if(ba<20)then u[bl]=(u[bq]*l[x]);else end else u[bl]={};end end else if not(ba<15)then if not(ba>15)then local b,c,d,e,f e=bi[22]d=bi[159]do b=(e+2)end do c={u[e](u[e+1],u[b])}end for j=1,d do u[(b+j)]=c[j]end f=u[(e+3)]if f then u[b]=f else bc=bq;end;else if not(bi[88]~=16)then u[bh]=(function()u[bl]=cb(m[bi[40]],nil,k);end)else u[bl]=bg[bm]end end else do if not(ba>12)then bc=((u[bl]~=u[x])and bq or bc)else if not(ba~=13)then do u[bl]=bg[bm]end else do u[bl]=-u[bq];end end end end end end end end else if not(bi[88]<36)then if not(ba>41)then do if not(bi[88]>38)then if not(ba>36)then u[bl]=(u[bq]+u[bi[159]]);else if(ba<38)then while(u[bi[22]]~=u[x])do bc=bq;break end else u[bi[22]]=(u[bi[42]]%u[x]);end end else if not(ba<g)then if(ba>40)then do for b=bl,bq do u[b]=nil;end;end else do return u[bl]end end else local b b={}while#a>0 do for c=1,#a do local c=a[c]for d=0,#c do local c=c[d]local d=c[1]local e=c[2]if d==u and e>=0 then b[e]=d[e]c[1]=b end end end break end return 1;end end end else if not(ba<45)then if not(ba>45)then local b,c,d b=bl c=u[b]d=bq do for e=i,d do do c[e]=u[(b+e)]end end;end else if(ba<47)then bc=((u[bl]<u[x])and bq or bc)else local b,c b=bi[22]do c={}end if(#a>0)then do for d=1,#a do local e e=a[d]for a=0,#e do local d,f,g f=e[a]d=f[1]g=f[2]if(d==u and g>=0)then c[g]=d[g]f[1]=c end end end end end return u[b],u[(b+1)]end end else do if not(ba<43)then if(ba>43)then local a a=u[bj][y]u[bj][y]=(a..u[x]);else end else local a a=bl u[a]=u[a](u[a+1]);end end end end else if not(ba<30)then if not(ba<33)then if not(ba<34)then if 34==ba then l=bg[bl](l)else u[bl]=#u[bq];end else bb=bi[bl];end else if not(ba>30)then local a,b,c b=bi[22]c={u[b](u[b+1])}a=0 for d=b,x do do a=(a+1);end u[d]=c[a];end else if(ba<32)then do u[bl]=nil;end else local a a=bl do return bo(u,a,(a+bq))end;end end end else if not(ba<27)then if not(ba>27)then k[l[bq]]=u[bl];else if(ba<29)then do s[bc]=bz[y];end bc=bq;else local a do a=bi[22]end u[a](u[(a+1)])end end else if not(ba<25)then do if(ba>25)then if((u[bl]<u[x]))then bc=bq;end;else do u[bi[22]]();end end end else do u={};end do for a=0,z do do if(a<t)then u[a]=w[(a+1)];else do break end end;end end;end end end end end end end bc=(bc+1);end;end;end be=1452 else if be<1479 then be=1483 return cb(cp(bp()),{},bp())();else break end end else if be>=1331 then if be<1359 then bg={}be=1365 else be=1408 br={}end else cp=function(a,b,b)local b,c,d,e,f,g,i,j=99,43,43,51,53,36,93,13,56,79,68,15,75,48,60,47,55,49,19,23,83,47,20,63,35,17,65 while b~=55 do if c>=326 then if c<=442 then if c>=411 then if c<436 then c=442 for k=1,i do local l,m,n,p=84,62,87,27,34,63,77,80,40,96,49,62,48 while l~=43 do if m>=192 then if m<=192 then m=212 if(2==n)then p=(not(cj()==0));elseif(not(n~=4))then do p=bt();end elseif(1==n)then p=cq();elseif(not(n~=3))then p=a[cq()];end;else if m>214 then break else m=253 f[k]=p;end end else if m<=62 then n,p=nil m=110 else if m>116 then p=nil m=192 else m=155 n=cj()end end end end end else c=474 do d[117]=f end end else if c<367 then i=bk()c=375 else c=411 f={}end end else if c>=508 then if c<=508 then c=524 do d[67]=cj();end else if c>528 then b=55;else c=568 return d;end end else if c<484 then for a=1,bk()do local b,k,l,m,n,p=76,58,87,46,48,13,18,95,98,31,44,49,82,29,84,87,62,43,11,52,51,96,93,44,89,10,35 while b~=45 do if k>=339 then if k>=459 then if k>=511 then if k<=511 then k=547 m[87]=-m[159]else if k<570 then k=575 do e[a]=m;end else b=45;end end else if k<475 then k=481 m[139]=ck(n,12,20);else k=511 m[191]=-m[22]end end else if k>=390 then if k<422 then k=431 do m[42]=ck(l,12,r);end else k=459 m[159]=ck(n,21,29);end else if k<357 then m[88]=ck(l,1,11);k=365 else m[22]=ck(n,3,11);k=390 end end end else if k>=181 then if k<=204 then if k>183 then k=248 n=bk()else k=204 do while(cj()==1)do for a=1,cj()do m[48][a]={cj()==0,bk()}end break end end end else if k>=275 then if k<294 then p=ck(n,1,2)k=303 else m[99]=p k=339 end else l=bk()k=275 end end else if k<=93 then if k>62 then k=115 m={{},nil,nil,nil,nil}else l,m,n,p=nil k=93 end else if k<136 then do m[23]=cj();end k=138 else k=181 m[48]={};end end end end end end c=489 else d[70]=e;c=508 end end end else if c<=142 then if c>=112 then if c>120 then d={}c=176 else c=142 j={}end else if c<64 then c=68 d,e,f,g,i,j=nil else c=112 e={}end end else if c>=254 then if c<295 then for a=1,bk()do j[a-1]=cp();end c=302 else c=326 d[h]=j;end else if c<214 then c=219 g=bk()else c=254 for a=(#bz+1),(#bz+g)do local b,c,d,e,f=69,71,93,19,96,25,75,61,90,80,49,17,95,17,14,74,23,42,23,55,20,45,53 while b~=41 do if c>=333 then if c<=422 then if c>=379 then if c<417 then c=422 do e[159]=ck(d,21,29);end else c=450 e[42]=ck(f,12,33);end else if c>335 then c=379 e[40]=ck(d,12,20);else e[22]=ck(d,3,11);c=358 end end else if c>=511 then if c<553 then c=560 bz[a]=e;else b=41;end else if c>454 then do e[87]=-e[159]end c=511 else e[191]=-e[22]c=467 end end end else if c<=158 then if c>=142 then if c<152 then c=158 e[23]=cj();else c=174 d=bk()end else if c<113 then d,e,f=nil c=120 else do e={}end c=142 end end else if c<=208 then if c<199 then c=208 f=bk()else c=251 e[139]=cj();end else if c<287 then c=291 e[o]=ck(d,1,2);else e[88]=ck(f,1,11);c=333 end end end end end end end end end end end end be=1331 end end end else if be<=914 then if be>=841 then if be<=841 then be=890 cr={[0]=1}else if be<906 then be=914 do co=2 end else be=931 for a=1,31 do cr[a]=co co=(co*2)end end end else if be>770 then ce=(2^52)be=841 else be=792 do bx=''end end end else if be<=995 then if be<=931 then be=947 ch=function(a,b,c,d,d)local d,e,f=65,54,34,26,10,84,60,48,90,41,15,64,70,54 while d~=34 do if e<=124 then if e<=54 then f=nil e=88 else if e<116 then f=nil e=124 else f=((b/cr[a])%cr[c])e=159 end end else if e<=159 then f=(f-f%1)e=205 else if e<236 then e=238 return f else d=34;end end end end end else if be<993 then be=995 ci=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+cn[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)else ck=function(a,b,c,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(d-d%1);end be=1019 end end else if be>=1048 then if be>1055 then be=1105 cj=function()local a a=bu(bn,bv,bv)bv=(bv+1);return a;end else bk=function()local a,b,c,d c,d,b,a=bu(bn,bv,(bv+3))bv=(bv+4);return((a*16777216)+(b*65536)+(d*256)+c);end be=1064 end else bv=1 be=1048 end end end end end end end)(4,88,70,54,69,159,40,153,1,9,14,1,3,42,99,8,85,33,0,11,false,1,1,1,1,20,10,4,13)end